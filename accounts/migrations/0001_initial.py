# Generated by Django 2.2 on 2019-05-07 17:12

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(help_text='알파벳과 숫자만 입력 가능합니다.', max_length=20, primary_key=True, serialize=False, unique=True, validators=[django.core.validators.RegexValidator(regex='^[a-zA-Z0-9]+$')])),
                ('eduYear', models.IntegerField(default=2014)),
                ('studentMajor', models.CharField(max_length=30)),
                ('studentDoubleMajor', models.CharField(default=None, max_length=30)),
                ('studentTrack', models.CharField(default=None, max_length=30)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='TakeListPoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('capability', models.FloatField(verbose_name='역량학점')),
                ('integration', models.FloatField(verbose_name='통합학점')),
                ('basic', models.FloatField(verbose_name='기초학점')),
                ('general', models.FloatField(verbose_name='일반학점')),
                ('pioneer', models.FloatField(verbose_name='개척학점')),
                ('majorSelect', models.FloatField(verbose_name='전선학점')),
                ('major', models.FloatField(verbose_name='전필학점')),
                ('dmajorSelect', models.FloatField(verbose_name='이선학점')),
                ('dmajor', models.FloatField(verbose_name='이필')),
                ('total', models.FloatField(verbose_name='전체학점')),
                ('TakeListPointUserName', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TakeList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classification', models.CharField(max_length=10)),
                ('lectureNumber', models.CharField(max_length=10)),
                ('lectureName', models.CharField(max_length=20)),
                ('lecturePoint', models.IntegerField(default=0)),
                ('grade', models.CharField(max_length=2)),
                ('takeListUserName', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
